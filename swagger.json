{
  "swagger": "2.0",
  "info": {
    "version": "1",
    "title": "Archimedes test API",
    "description": ""
  },
  "host": "hidden-retreat-03498.herokuapp.com/",
  "basePath": "/api/",
  "tags": [
      {
        "name": "Users",
        "description": "API for users data in the system"
      }
  ],
  "schemes": [
      "https", "http"
  ],
  "consumes": [
    "application/json", "multipart/form-data"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "users/new": {
      "post": {
        "tags": ["Users"],
        "summary": "Creates a new user resource",
        "parameters":
          [
            {
              "name": "NewUser",
              "in": "body",
              "description": "The details of the user data to be created",
              "required": true,
              "schema": {
                "$ref": "#/definitions/createUser"
              }
            }
          ],
        "responses": {
          "201": {
            "description": "A new user is created",
            "schema": {
              "$ref": "#/definitions/createUserResponse"
            }
          },
          "400": {
            "description": "Error - Missing required fields"
          }
        }
      }
    },
    "/users/:id": {
      "patch": {
        "tags": [
          "Users"
        ],
        "summary": "Update a User data",
        "parameters": [
            {
              "name": "User update params",
              "in": "body",
              "description": "The details of the user data to be updated",
              "schema": {
                "$ref": "#/definitions/updateProfileData"
              }
            }
        ],
        "responses": {
          "200": {
          "description": "Updates ANY or all user object  data",
          "schema": {
            "$ref": "#/definitions/getProfileData"
          }
        },
        "404": {
              "description": "Not Found",
              "schema": {
                "$ref": "#/definitions/errorResponse"
              }
            }
          }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Delete a specific user data",
        "parameters": [],
        "responses": {
          "200": {
          "description": "Property succesfully deleted",
          "schema": {
            "$ref": "#/definitions/deletePropertyRes"
          }
        },
        "403": {
            "description": "Fordidden, User not an admin",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      } 
    },
    "/users/all": {
      "get": {
      "tags": [
        "Users"
      ],
      "summary": "Get All users data",
      "parameters": [],
      "responses": {
          "200": {
          "description": "Returns data of all users data",
          "schema": {
            "$ref": "#/definitions/getAllUsers"
          }
        },
        "400": {
            "description": "Error while fetching users",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      } 
    }
  },
  "definitions": { 
    "createUser": {
      "required": [
        "email",
        "fullname",
        "role"
      ],
      "properties": {
        "email": {
          "type": "string"
        },
        "fullname": {
          "type": "string"
        },
        "role": {
          "type": "string"
        }
      }
    },
    "createUserResponse": {
      "properties": {
        "code": {"type": "integer", "default": 200},
        "data": {
          "type": "object",
          "properties": {
            "user": {
              "type": "object",
              "$ref": "#/definitions/user"
            }
          }          
        },
        "message": {
          "type": "string"
        },
        "success": {
          "type":"boolean"
        }
      }
    },
    "userResponse": {
      "properties": {
        "code": {"type": "integer", "default": 200},
        "data": {
          "type": "object",
          "properties": {
            "user": {
              "type":"object",
              "$ref": "#/definitions/user"
            }
          }
        },
        "message": {"type": "string"},
        "success": {
          "type": "boolean"
        }
      }
    },
    "user": {
      "properties": {
        "fullname": {"type": "string"},
        "id": {
          "type": "integer"
        },
        "email": {"type": "string"},
        "role": {"type": "string"},
        "createdAt": {"type": "string"},
        "updatedAt": {"type": "string"}
      }
    },
    "errorResponse": {
      "properties": {
        "code": {"type": "integer", "default": 400},
        "error": {
          "type": "object",
          "properties":{
            "devMessage": {"type": "string", "default": ""},
            "possibleSolution": {"type": "string", "default": ""},
            "exceptionError": {"type": "string", "default": ""},
            "validationError": {"type": "array", "default": []},
            "userMessage": {"type": "string", "default": ""},
            "errorCode": {"type": "integer"}
          }
        },
        "message": {"type": "string", "default": "failed"},
        "success": { "type": "boolean", "default": "false" }
      }
    },
    "getAllUsers": {
      "properties": {
        "code": { "type": "number" , "description": "The status code of response", "default": 200},
        "data": {
          "type": "object",
            "users": {
              "type": "object",
              "properties": {
                "type": "array", 
                "description": "All Users",
                "items": {
                  "$ref": "#/definitions/user"
                }
              }
          }
        },
        "message": { "type": "string" , "description": "success message"},
        "success": { "type": "boolean" , "default": true }
      }
    }
  }
}
 